*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  /* cursor: none; */
}

:root {
  /* Light Mode */
  --blend-mode-light: lighten;
  --clr-text-light: hsl(240, 4%, 5%);
  --clr-text-secondary-dark: hsl(0, 0%, 70%);
  --clr-background-light: hsl(0, 0%, 100%);
  --clr-span1-light: hsl(16, 97%, 53%);
  --clr-span2-light: hsl(212, 80%, 57%);
  --clr-span3-light: hsl(146, 100%, 67%);

  /* Dark Mode */
  --blend-mode-dark: darken;
  --clr-text-dark: hsl(0, 0%, 100%);
  --clr-text-secondary-dark: hsl(0, 0%, 70%);
  --clr-background-dark: hsl(240, 4%, 5%);
  --clr-span1-dark: hsl(16, 97%, 53%);
  --clr-span2-dark: hsl(212, 80%, 57%);
  --clr-span3-dark: hsl(146, 100%, 67%);
}

/* Doing this gives a kinda cool staggered theme-swap effect! */
/* * {
  transition: all 300ms ease-in-out;
} */

body {
  color: var(--clr-text);
  background-color: var(--clr-background);

  /* Ensure our animated divs don't cause a horizontal scrollbar */
  /* TODO: Find a way to animate without using divs to hide content */
  overflow-x: hidden;
}

.theme-btn {
  font: inherit;
  padding: 0.5rem 1.5rem;
  border-radius: 25px;
  color: var(--clr-text);
  background-color: var(--clr-background);
  border: 2px solid var(--clr-text);
  cursor: pointer;
}

#logo {
  color: var(--clr-text);
}

.nav-header {
  min-height: 10vh;
  width: 80%;
  margin: auto;
  padding: 2rem 0;
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  color: var(--clr-text);
  /* Set a non-static position so we create new stacking context */
  position: relative;
  z-index: 2;
}

.line1,
.line2,
.line3 {
  width: 3rem;
  height: 0.2rem;
  margin: 0.4rem;
  background-color: var(--clr-text);
  pointer-events: none;
}

.slide {
  min-height: 100vh;
  margin: 0 auto;
  width: 80%;
  display: flex;
  gap: 3rem;
  justify-content: space-between;
  align-items: center;
  color: var(--clr-text);
  background-color: var(--clr-background);

  /* This makes each slide look like its falling when being scaled -- kinda cool! */
  transform-origin: 50% 100%;
}

.hero-description {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1;
  flex-basis: 25rem;
  position: relative;

  clip-path: inset(0 99% 0 0);
}

.hero-description p {
  padding: 3rem 0;
  font-size: 1.5rem;
  color: var(--clr-text-secondary);
}

.hero-image {
  position: relative;
  flex: 1;
  flex-basis: 25rem;
  overflow: hidden;
  max-height: 60vh;
}

.hero-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.section1-span {
  color: var(--clr-span1);
}

.section2-span {
  color: var(--clr-span2);
}

.section3-span {
  color: var(--clr-span3);
}

.hero-description h2 {
  font-family: 'sans-serif';
  font-size: 5rem;
}

.active {
  color: blue !important;
}

.cta {
  font: inherit;
  padding: 1rem 2rem;
  background: none;
  border: 1px solid var(--clr-text);
  color: var(--clr-text);
  font-size: 1rem;
  text-decoration: none;
  align-self: flex-start;
  cursor: pointer;
}

.cta:hover {
  color: var(--clr-background);
  background-color: var(--clr-text);
}

.nav-bar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #ff6a00;
  /* var(--clr-background); */
  display: flex;
  justify-content: space-around;
  align-items: center;
  /* z-index: 1; */
  opacity: 1;
  /* Position this circular clip just slightly off the top-right screeb */
  clip-path: circle(50px at 100% -10%);
  -webkit-clip-path: circle(50px at 100% -10%);
}

.nav-hamburger {
  cursor: pointer;
  position: relative;
}

.nav-hamburger.active {
  z-index: 100;
}

.nav-links {
  font-size: 3rem;
  flex-basis: 30rem;
}

.nav-links h3 {
  padding: 3rem 0;
}

.contact {
  flex-basis: 30rem;
}

.contact h2 {
  font-size: 3rem;
  padding: 2rem 0;
}

.contact p {
  font-size: 1.5rem;
  line-height: 2rem;
}

/* Positioned relative section-description and section-img for each section */
.reveal-image,
.reveal-text {
  position: absolute;
  width: 100%;
  height: 100%;
  /* Must match the background -- we're essentially hiding what's underneath here */
  background-color: var(--clr-background);
  left: 0;
  top: 0;

  transform: translateX(100%);
}

body.hide {
  overflow: hidden;
}

.cursor {
  width: 3rem;
  height: 3rem;
  border: 2px solid var(--clr-text);
  border-radius: 50%;
  /* Necessary to animate the left and top properties in JavaScript */
  position: absolute;

  /* We set position in JS on top-left of mouse -- adjust it here to be centered */
  transform: translate(-50%, -50%);

  /* Can't click through things with this cursor in the way! */
  pointer-events: none;

  transition: 0.5s ease-in-out;
  transition-property: background, transform;
  transform-origin: 75% 75%;
}

.cursor-text {
  /* Center the text inside the custom cursor */
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: 0.5rem;
  transform: translate(-50%, -50%);
}

.cursor.nav-active {
  color: var(--clr-text);
  background-color: rgba(86, 124, 228, 0.9);
  transform: scale(2);
}

.cursor.cta-active {
  color: var(--clr-text);
  background: var(--clr-background);
  transform: scale(2);
}

.title {
  position: relative;
  overflow: hidden;
  background-color: var(--clr-background);
}

.title-swipe {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
  /* Had trouble blending this */
  /* Solution: Blend mode is on child (here) */
  /* And we give the parent (title) a background, otherwise there's nothing to blend with I guess?! */
  /* mix-blend-mode: darken; */
  /* We need darken if background is dark */
  /* We need lighten if it is light */
  /* So how do we conditionally determine this?!  */
  mix-blend-mode: var(--blend-mode);
  transform: translateY(100%);
}

.title-swipe-1 {
  background-color: var(--clr-span1);
}

.title-swipe-2 {
  background-color: var(--clr-span2);
}

.title-swipe-3 {
  background-color: var(--clr-span3);
}

/* Prevent Pin Spacer from blocking user input */
.scrollmagic-pin-spacer {
  position: static !important;
}

/* Custom Scrollbar */
body::-webkit-scrollbar {
  width: inherit;
}

body::-webkit-scrollbar-track {
  background-color: var(--clr-background);
}

body::-webkit-scrollbar-thumb {
  background-color: var(--clr-text);
  opacity: 0.5;
  /* border-radius: 10px; */
}

@media (prefers-color-scheme: dark) {
  :root {
    --blend-mode: var(--blend-mode-dark);
    --clr-text: var(--clr-text-dark);
    --clr-text-secondary: var(--clr-text-secondary-dark);
    --clr-background: var(--clr-background-dark);
    --clr-span1: var(--clr-span1-dark);
    --clr-span2: var(--clr-span2-dark);
    --clr-span3: var(--clr-span3-dark);
  }
}

[color-scheme='dark'] {
  --blend-mode: var(--blend-mode-dark);
  --clr-text: var(--clr-text-dark);
  --clr-text-secondary: var(--clr-text-secondary-dark);
  --clr-background: var(--clr-background-dark);
  --clr-span1: var(--clr-span1-dark);
  --clr-span2: var(--clr-span2-dark);
  --clr-span3: var(--clr-span3-dark);
}

/* Probably don't need both of these queries, but just to be safe! */
@media (prefers-color-scheme: light) {
  :root {
    --blend-mode: var(--blend-mode-light);
    --clr-text: var(--clr-text-light);
    --clr-text-secondary: var(--clr-text-secondary-light);
    --clr-background: var(--clr-background-light);
    --clr-span1: var(--clr-span1-light);
    --clr-span2: var(--clr-span2-light);
    --clr-span3: var(--clr-span3-light);
  }
}

[color-scheme='light'] {
  --blend-mode: var(--blend-mode-light);
  --clr-text: var(--clr-text-light);
  --clr-text-secondary: var(--clr-text-secondary-light);
  --clr-background: var(--clr-background-light);
  --clr-span1: var(--clr-span1-light);
  --clr-span2: var(--clr-span2-light);
  --clr-span3: var(--clr-span3-light);
}
